# Generated by Django 5.0.6 on 2025-08-29 19:57

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=140, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text="Frontend icon identifier, e.g., 'BookOpen', 'Code', etc.", max_length=50)),
                ('count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('code', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220, null=True)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='course_thumbnails/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('submitted_for_approval_at', models.DateTimeField(blank=True, null=True)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flagged_at', models.DateTimeField(blank=True, null=True)),
                ('flag_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_courses', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.category')),
                ('flagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flagged_courses', to=settings.AUTH_USER_MODEL)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL)),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.level')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('progress', models.FloatField(default=0.0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrolled_at'],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_number', models.CharField(max_length=100, unique=True)),
                ('issued_date', models.DateTimeField(auto_now_add=True)),
                ('grade', models.CharField(default='A', max_length=2)),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='certificate', to='courses.enrollment')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('article', 'Article'), ('file', 'File'), ('url', 'URL/Link')], default='video', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.course')),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', models.TextField(blank=True)),
                ('submission_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), blank=True, default=list, size=None)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('due_days', models.PositiveIntegerField(blank=True, null=True)),
                ('max_score', models.FloatField(default=100)),
                ('max_attempts', models.PositiveIntegerField(default=1)),
                ('rubric', models.TextField(blank=True)),
                ('rubric_criteria', models.JSONField(blank=True, default=list)),
                ('peer_review', models.BooleanField(default=False)),
                ('word_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('allow_late_submission', models.BooleanField(default=True)),
                ('late_deduction', models.FloatField(default=10.0)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True)),
                ('estimated_read_time', models.PositiveIntegerField(default=0)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('external_links', models.JSONField(blank=True, default=list)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.FloatField(default=0.0)),
                ('completed', models.BooleanField(default=False)),
                ('first_accessed', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.DurationField(blank=True, null=True)),
                ('enrollment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='courses.enrollment')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.lesson')),
            ],
            options={
                'ordering': ['lesson__order'],
                'unique_together': {('enrollment', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='LessonResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=50)),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_resources/')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='courses.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessons', to='courses.module'),
        ),
        migrations.CreateModel(
            name='QuizLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='multiple-choice', max_length=50)),
                ('time_limit', models.PositiveIntegerField(default=30)),
                ('passing_score', models.PositiveIntegerField(default=70)),
                ('attempts', models.PositiveIntegerField(default=3)),
                ('randomize_questions', models.BooleanField(default=False)),
                ('show_correct_answers', models.BooleanField(default=True)),
                ('grading_policy', models.CharField(default='highest', max_length=20)),
                ('questions', models.JSONField(blank=True, default=list)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('lesson_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_progress', to='courses.lessonprogress')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='courses.lessonresource')),
            ],
        ),
        migrations.CreateModel(
            name='VideoLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='lesson_videos/')),
                ('youtube_url', models.URLField(blank=True, max_length=500)),
                ('transcript', models.TextField(blank=True)),
                ('chapters', models.JSONField(blank=True, default=list)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='courses.lesson')),
            ],
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['status'], name='courses_cou_status_158bbf_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['instructor', 'created_at'], name='courses_cou_instruc_f1fbcf_idx'),
        ),
        migrations.AddConstraint(
            model_name='module',
            constraint=models.UniqueConstraint(fields=('course', 'order'), name='unique_module_order_per_course'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('course', 'order'), name='unique_lesson_order_per_course'),
        ),
        migrations.AlterUniqueTogether(
            name='resourceprogress',
            unique_together={('lesson_progress', 'resource')},
        ),
    ]
