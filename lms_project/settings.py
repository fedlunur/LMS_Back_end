"""
Django settings for lms_project project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
import os
BASE_DIR = Path(__file__).resolve().parent
env_path = BASE_DIR / '.env'
load_dotenv(dotenv_path=env_path)


SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = ['localhost','127.0.0.1','49.12.70.115']
#ALLOWED_HOSTS = ['*']
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.getenv('DB_NAME', 'lms'),
#         'USER': os.getenv('DB_USER', 'lms'),
#         'PASSWORD': os.getenv('DB_PASSWORD', 'lms'),
#         'HOST': os.getenv('DB_HOST', 'db'),  # 'db' to match docker-compose service name
#         'PORT': os.getenv('DB_PORT', '5432'),
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
     # 'channels',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',  # Enable CORS handling
    'user_managment',
    'courses',
    'grading',
  
   
  
]

SIMPLE_JWT = {
    # 'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
    # 'REFRESH_TOKEN_LIFETIME': timedelta(days=70),
    'ACCESS_TOKEN_LIFETIME': timedelta(days=365*10),  # 10 years
    #  'REFRESH_TOKEN_LIFETIME': timedelta(days=365*20),  # 20 years
     'REFRESH_TOKEN_LIFETIME': timedelta(seconds=300), 
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
      'whitenoise.middleware.WhiteNoiseMiddleware',
     
]

ROOT_URLCONF = "lms_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
WSGI_APPLICATION = 'wsgi.application'
# WSGI_APPLICATION = 'lms_project.wsgi.application'

# for the docker just uncomment the below 
# ASGI_APPLICATION = 'backend.asgi.application'
# WSGI_APPLICATION = 'backend.wsgi.application'

# CORS_ALLOW_HEADERS = [
#     'authorization',
#     'content-type',
#     'x-requested-with',
#     'accept',
#     'origin',
#     'access-control-allow-origin',
# ]



AUTH_USER_MODEL = 'user_managment.User'
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# ASE_DIR = Path(__file__).resolve().parent.parent

# STATIC_URL = '/static/'

# # Source folders for static files during development
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',  # your global static assets folder
# ]

# Folder where collectstatic collects files for production
STATIC_ROOT = BASE_DIR / 'staticfiles'

JAZZMIN_SETTINGS = {
    "site_title": "LMS Admin",
    "site_header": "Emerald LMS",
    "site_brand": "Emerald LMS",
    # "site_logo": "images/logo.png",
    # "login_logo": "images/loginlogo.jpg",
    "site_logo_classes": "img-fluid rounded-circle",
    "welcome_sign": "Welcome to Emerald LMS Admin Panel",
    "copyright": "Â© 2025 Emerald LMS",
    "show_sidebar": True,
    "hide_apps": ["auth.Group"],  # Updated to include the correct full app name
    "navigation_expanded": True,
    "use_google_fonts_cdn": True,
    "custom_css": "css/custom.css",
    "theme": "lux",  # Modern and professional theme
    "show_ui_builder": False,
    "changeform_format": "collapsible",  # Makes forms easier to work with
    "changeform_format_overrides": {"auth.user": "carousel"},  # Example: customized format for specific models

    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success"
    }
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-light bg-primary",  # Clean primary color for branding
    "accent": "accent-primary",  # Consistent with the brand color
    "navbar": "navbar-dark bg-primary",  # A bold, modern dark navbar
    "no_navbar_border": True,
    "navbar_fixed": True,  # Fixes the navbar for better UX
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,  # Fixes the sidebar for easier navigation
    "sidebar": "sidebar-dark-primary",  # Matches the navbar for consistency
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": True,  # Indents child elements for clarity
    "sidebar_nav_compact_style": True,  # Compact and clean sidebar design
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "flatly",  # Alternative modern light theme
    "dark_mode_theme": "cyborg",  # Alternative bold and modern dark theme
  "button_classes": {
    "primary": "btn-primary btn-sm rounded-pill shadow-sm",
    "secondary": "btn-secondary btn-sm rounded-pill shadow-sm",
    "info": "btn-info btn-sm rounded-pill shadow-sm",
    "warning": "btn-outline-warning btn-sm rounded-pill shadow-sm",
    "danger": "btn-outline-danger btn-sm rounded-pill shadow-sm",
    "success": "btn-outline-success btn-sm rounded-pill shadow-sm"
}

}


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_REDIRECT_URL = '/admin/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# if you need to block access from postman make true 
# CSRF_COOKIE_HTTPONLY = False
# CSRF_TRUSTED_ORIGINS = [
#     'http://188.245.105.29',
# ]

CORS_ALLOW_ALL_ORIGINS = True  # For testing
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8888",  # Replace with your frontend URL
   " http://localhost:59567",
    "http://10.0.2.2:8888",
    "http://127.0.0.1:8888",
    'http://188.245.105.29:8888',
     'http://localhost:62488', 
    
]
CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]
CORS_ALLOW_HEADERS = [
    "accept",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]

